name: Rebuild and Deploy Static Site

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every 24 hours at midnight
  push:
    branches:
      - main  # Change to your default branch if different

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup R
      uses: r-lib/actions/setup-r@v2

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pandoc \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev
          
    - name: Retrieve R Version
      id: r_version
      run: |
        R_VERSION=$(R --version | head -n 1 | awk '{print $3}' | sed 's/[[:alpha:]]//g')
        echo "R_VERSION=${R_VERSION}" >> $GITHUB_ENV

    - name: Check R Library Paths
      run: R -e '.libPaths()'

    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: /home/runner/work/_temp/Library
        key: ${{ runner.os }}-r-${{ env.R_VERSION }}
        restore-keys: |
          ${{ runner.os }}-r-

    - name: Install R Packages if not cached
      run: |
        R -e "options(repos = 'https://cloud.r-project.org')"
        R -e ".libPaths('/home/runner/work/_temp/Library'); install.packages(c('rmarkdown', 'knitr', 'dplyr', 'readr', 'tidyr', 'stringr', 'googledrive', 'googlesheets4', 'DT', 'jsonlite', 'purrr', 'lubridate', 'gargle'))"

    - name: Check Pandoc Version
      run: pandoc --version

    - name: Knit R Markdown (with error handling)
      env:
        GOOGLE_DRIVE_KEY: ${{ secrets.GOOGLE_DRIVE_KEY }}
      run: |
        # Print part of the secret for debugging
        echo "Secret starts with: ${GOOGLE_DRIVE_KEY:0:5}"
        
        # Set the environment variable
        Rscript -e "Sys.setenv(GOOGLE_DRIVE_KEY = Sys.getenv('GOOGLE_DRIVE_KEY'))"
        
        # Try to knit the site, catch any errors to ensure the workflow continues
        Rscript -e "
          tryCatch({
            rmarkdown::render_site()
          }, error = function(e) {
            message('Error during knitting: ', e$message)
            # Continue execution even if knitting fails
          })
        "

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs  # Change to your output directory


